on:
  pull_request:
  merge_group:
name: PR Checks
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: short
jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo build --locked --release --all-features

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest
      - name: Run tests
        run: cargo nextest run --locked --release

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: Swatinem/rust-cache@v2
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  check_static_linking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - name: Build binary
        run: cargo build --release --locked
      - name: Check static linking
        run: |
          binary_path="target//release/sqruff"
          if ldd "$binary_path" 2>&1 | grep -q "not a dynamic executable"; then
            echo "Binary is fully statically linked for target ${{ matrix.target }}"
          else
            echo "Binary is not fully statically linked for target ${{ matrix.target }}"
            exit 1
          fi