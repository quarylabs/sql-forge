file:
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: TEMPORARY
    - keyword: FUNCTION
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - function_name_identifier: function_name
    - keyword: AS
    - quoted_literal: '"class_name"'
    - keyword: USING
    - file_keyword: FILE
    - quoted_literal: '"resource_locations"'
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name_identifier: simple_udf
    - keyword: AS
    - quoted_literal: '''SimpleUdf'''
    - keyword: USING
    - file_keyword: JAR
    - quoted_literal: '''/tmp/SimpleUdf.jar'''
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: TEMPORARY
    - keyword: FUNCTION
    - function_name_identifier: simple_temp_udf
    - keyword: AS
    - quoted_literal: '''SimpleUdf'''
    - keyword: USING
    - file_keyword: JAR
    - quoted_literal: '''/tmp/SimpleUdf.jar'''
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name_identifier: simple_udf
    - keyword: AS
    - quoted_literal: '''SimpleUdfR'''
    - keyword: USING
    - file_keyword: JAR
    - quoted_literal: '''/tmp/SimpleUdfR.jar'''
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name_identifier: test_avg
    - keyword: AS
    - quoted_literal: '''org.apache.hadoop.hive.ql.udf.generic.GenericUDAFAverage'''
- statement_terminator: ;
- statement:
  - create_function_statement:
    - keyword: CREATE
    - keyword: TEMPORARY
    - keyword: FUNCTION
    - function_name_identifier: test_avg
    - keyword: AS
    - quoted_literal: '''org.apache.hadoop.hive.ql.udf.generic.GenericUDAFAverage'''
- statement_terminator: ;
- file:
  - word: CREATE
  - word: TEMPORARY
  - word: FUNCTION
  - word: hello
  - start_bracket: (
  - end_bracket: )
  - word: RETURNS
  - word: STRING
  - word: RETURN
  - single_quote: '''Hello World!'''
  - semicolon: ;
  - word: CREATE
  - word: OR
  - word: REPLACE
  - word: TEMPORARY
  - word: FUNCTION
  - word: function_name
  - start_bracket: (
  - end_bracket: )
  - word: RETURNS
  - word: TIMESTAMP
  - word: LANGUAGE
  - word: SQL
  - word: RETURN
  - word: SELECT
  - word: MAX
  - start_bracket: (
  - word: time
  - end_bracket: )
  - word: AS
  - word: time
  - word: FROM
  - word: my_table
  - semicolon: ;
  - word: CREATE
  - word: FUNCTION
  - word: area
  - start_bracket: (
  - word: x
  - word: DOUBLE
  - comma: ','
  - word: y
  - word: DOUBLE
  - end_bracket: )
  - word: RETURNS
  - word: DOUBLE
  - word: RETURN
  - word: x
  - star: '*'
  - word: y
  - semicolon: ;
  - word: CREATE
  - word: FUNCTION
  - word: square
  - start_bracket: (
  - word: x
  - word: DOUBLE
  - end_bracket: )
  - word: RETURNS
  - word: DOUBLE
  - word: RETURN
  - word: area
  - start_bracket: (
  - word: x
  - comma: ','
  - word: x
  - end_bracket: )
  - semicolon: ;
  - word: CREATE
  - word: FUNCTION
  - word: cte_function
  - start_bracket: (
  - word: x
  - word: INT
  - end_bracket: )
  - word: RETURNS
  - word: string
  - word: LANGUAGE
  - word: SQL
  - word: RETURN
  - word: WITH
  - word: cte
  - word: AS
  - start_bracket: (
  - word: SELECT
  - word: x
  - word: AS
  - word: y
  - end_bracket: )
  - word: SELECT
  - star: '*'
  - word: FROM
  - word: cte
  - semicolon: ;
  - word: CREATE
  - word: FUNCTION
  - word: roll_dice
  - start_bracket: (
  - end_bracket: )
  - word: RETURNS
  - word: INT
  - word: NOT
  - word: DETERMINISTIC
  - word: CONTAINS
  - word: SQL
  - word: COMMENT
  - single_quote: '''Roll a single 6 sided die'''
  - word: RETURN
  - start_bracket: (
  - word: rand
  - start_bracket: (
  - end_bracket: )
  - star: '*'
  - numeric_literal: '6'
  - end_bracket: )
  - casting_operator: '::'
  - word: INT
  - plus: +
  - numeric_literal: '1'
  - semicolon: ;
  - word: CREATE
  - word: FUNCTION
  - word: roll_dice
  - start_bracket: (
  - word: num_dice
  - word: INT
  - word: DEFAULT
  - numeric_literal: '1'
  - word: COMMENT
  - single_quote: '''number of dice to roll (Default: 1)'''
  - comma: ','
  - word: num_sides
  - word: INT
  - word: DEFAULT
  - numeric_literal: '6'
  - word: COMMENT
  - single_quote: '''number of sides per die (Default: 6)'''
  - end_bracket: )
  - word: RETURNS
  - word: INT
  - word: NOT
  - word: DETERMINISTIC
  - word: CONTAINS
  - word: SQL
  - word: COMMENT
  - single_quote: '''Roll a number of n-sided dice'''
  - word: RETURN
  - word: aggregate
  - start_bracket: (
  - word: sequence
  - start_bracket: (
  - numeric_literal: '1'
  - comma: ','
  - word: roll_dice
  - dot: .
  - word: num_dice
  - comma: ','
  - numeric_literal: '1'
  - end_bracket: )
  - comma: ','
  - numeric_literal: '0'
  - comma: ','
  - start_bracket: (
  - word: acc
  - comma: ','
  - word: x
  - end_bracket: )
  - right_arrow: ->
  - start_bracket: (
  - word: rand
  - start_bracket: (
  - end_bracket: )
  - star: '*'
  - word: roll_dice
  - dot: .
  - word: num_sides
  - end_bracket: )
  - casting_operator: '::'
  - word: int
  - comma: ','
  - word: acc
  - right_arrow: ->
  - word: acc
  - plus: +
  - word: roll_dice
  - dot: .
  - word: num_dice
  - end_bracket: )
  - semicolon: ;
  - word: CREATE
  - word: FUNCTION
  - word: main
  - dot: .
  - word: default
  - dot: .
  - word: greet
  - start_bracket: (
  - word: s
  - word: STRING
  - end_bracket: )
  - word: RETURNS
  - word: STRING
  - word: LANGUAGE
  - word: PYTHON
  - word: AS
  - dollar_quote: |-
      $$
          def greet(name):
            return "Hello " + name + "!"

          return greet(s) if s else None
        $$
  - semicolon: ;
  - word: CREATE
  - word: FUNCTION
  - word: return_table
  - start_bracket: (
  - end_bracket: )
  - word: RETURNS
  - word: TABLE
  - word: RETURN
  - word: SELECT
  - word: time
  - word: FROM
  - word: my_table
  - semicolon: ;
  - word: CREATE
  - word: FUNCTION
  - word: return_table
  - start_bracket: (
  - end_bracket: )
  - word: RETURNS
  - word: TABLE
  - start_bracket: (
  - word: col_a
  - word: string
  - comma: ','
  - word: col_b
  - word: string
  - word: comment
  - double_quote: '"asdf"'
  - end_bracket: )
  - word: RETURN
  - word: SELECT
  - word: col_a
  - comma: ','
  - word: col_b
  - word: FROM
  - word: my_table
  - semicolon: ;
  - word: create
  - word: or
  - word: replace
  - word: function
  - back_quote: '`catalog`'
  - dot: .
  - back_quote: '`schema`'
  - dot: .
  - back_quote: '`name`'
  - start_bracket: (
  - word: param
  - word: int
  - end_bracket: )
  - word: returns
  - word: int
  - word: return
  - word: select
  - word: param
  - semicolon: ;
