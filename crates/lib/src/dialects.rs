pub mod ansi;
pub mod ansi_keywords;
pub mod bigquery;
pub mod bigquery_keywords;
pub mod clickhouse;
pub mod clickhouse_keywords;
pub mod postgres;
pub mod postgres_keywords;
pub mod snowflake;
pub mod snowflake_keywords;

#[derive(Debug, PartialEq, Eq, Clone, Copy)]
pub enum SyntaxKind {
    File,
    ColumnReferenceSegment,
    ObjectReference,
    Expression,
    WildcardIdentifier,
    Function,
    HavingClause,
    PathSegment,
    LimitClause,
    CubeRollupClause,
    RollupFunctionName,
    CubeFunctionName,
    GroupingSetsClause,
    GroupingExpressionList,
    SetClause,
    FetchClause,
    FunctionDefinition,
    AlterSequenceOptions,
    RoleReference,
    TablespaceReference,
    ExtensionReference,
    TagReference,
    ColumnDefinition,
    ColumnConstraint,
    CommentClause,
    TableEndClause,
    MergeMatch,
    MergeMatchedClause,
    MergeNotMatchedClause,
    MergeInsertClause,
    MergeUpdateClause,
    MergeDeleteClause,
    SetClauseList,
    TableReference,
    SchemaReference,
    SingleIdentifierList,
    GroupByClause,
    FrameClause,
    WithCompoundStatement,
    CommonTableExpression,
    CTEColumnList,
    SequenceReference,
    TriggerReference,
    TableConstraint,
    JoinOnCondition,
    DatabaseReference,
    IndexReference,
    CollationReference,
    OverClause,
    NamedWindow,
    WindowSpecification,
    PartitionByClause,
    JoinClause,
    DropTriggerStatement,
    SamplingExpression,
    TableExpression,
    CreateTriggerStatement,
    DropModelStatement,
    DescribeStatement,
    UseStatement,
    ExplainStatement,
    CreateSequenceStatement,
    CreateSequenceOptions,
    AlterSequenceStatement,
    DropSequenceStatement,
    DropCastStatement,
    CreateFunctionStatement,
    DropFunctionStatement,
    CreateModelStatement,
    CreateViewStatement,
    DeleteStatement,
    UpdateStatement,
    CreateCastStatement,
    CreateRoleStatement,
    DropRoleStatement,
    AlterTableStatement,
    CreateSchemaStatement,
    SetSchemaStatement,
    DropSchemaStatement,
    DropTypeStatement,
    CreateDatabaseStatement,
    DropDatabaseStatement,
    FunctionParameterList,
    CreateIndexStatement,
    DropIndexStatement,
    CreateTableStatement,
    AccessStatement,
    InsertStatement,
    TransactionStatement,
    DropTableStatement,
    DropViewStatement,
    CreateUserStatement,
    DropUserStatement,
    NotEqualTo,
    Concat,
    ArrayExpression,
    LocalAlias,
    MergeStatement,
    IndexColumnDefinition,
    BitwiseAnd,
    BitwiseOr,
    BitwiseLShift,
    BitwiseRShift,
    LessThan,
    GreaterThanOrEqualTo,
    LessThanOrEqualTo,
    Equals,
    GreaterThan,
    QualifiedNumericLiteral,
    AggregateOrderByClause,
    FunctionName,
    CaseExpression,
    WhenClause,
    ElseClause,
    WhereClause,
    SetOperator,
    ValuesClause,
    EmptyStructLiteral,
    ObjectLiteral,
    ObjectLiteralElement,
    TimeZone,
    BracketedArguments,
    DataType,
    AliasExpression,
    ShorthandCast,
    ArrayAccessor,
    ArrayLiteral,
    TypedArrayLiteral,
    StructType,
    StructLiteral,
    TypedStructLiteral,
    IntervalExpression,
    ArrayType,
    SizedArrayType,
    SelectStatement,
    OverlapsClause,
    SelectClause,
    Statement,
    WithNoSchemaBindingClause,
    WithDataClause,
    SetExpression,
    FromClause,
    EmptyStructLiteralBrackets,
    WildcardExpression,
    OrderByClause,
    TruncateStatement,
    FromExpression,
    FromExpressionElement,
    SelectClauseModifier,
    NamedWindowExpression,
    SelectClauseElement,
}

impl SyntaxKind {
    pub fn as_str(&self) -> &'static str {
        match self {
            SyntaxKind::File => "file",
            SyntaxKind::ColumnReferenceSegment => "column_reference",
            SyntaxKind::ObjectReference => "object_reference",
            SyntaxKind::Expression => "expression",
            SyntaxKind::WildcardIdentifier => "wildcard_identifier",
            SyntaxKind::Function => "function",
            SyntaxKind::HavingClause => "having_clause",
            SyntaxKind::PathSegment => "path_segment",
            SyntaxKind::LimitClause => "limit_clause",
            SyntaxKind::CubeRollupClause => "cube_rollup_clause",
            SyntaxKind::RollupFunctionName => "function_name",
            SyntaxKind::CubeFunctionName => "function_name",
            SyntaxKind::GroupingSetsClause => "grouping_sets_clause",
            SyntaxKind::GroupingExpressionList => "grouping_expression_list",
            SyntaxKind::SetClause => "set_clause",
            SyntaxKind::FetchClause => "fetch_clause",
            SyntaxKind::FunctionDefinition => "function_definition",
            SyntaxKind::AlterSequenceOptions => "alter_sequence_options_segment",
            SyntaxKind::RoleReference => "role_reference",
            SyntaxKind::TablespaceReference => "tablespace_reference",
            SyntaxKind::ExtensionReference => "extension_reference",
            SyntaxKind::TagReference => "tag_reference",
            SyntaxKind::ColumnDefinition => "column_definition",
            SyntaxKind::ColumnConstraint => "column_constraint_segment",
            SyntaxKind::CommentClause => "comment_clause",
            SyntaxKind::TableEndClause => "table_end_clause_segment",
            SyntaxKind::MergeMatch => "merge_match",
            SyntaxKind::MergeMatchedClause => "merge_when_matched_clause",
            SyntaxKind::MergeNotMatchedClause => "merge_when_not_matched_clause",
            SyntaxKind::MergeInsertClause => "merge_insert_clause",
            SyntaxKind::MergeUpdateClause => "merge_update_clause",
            SyntaxKind::MergeDeleteClause => "merge_delete_clause",
            SyntaxKind::SetClauseList => "set_clause_list",
            SyntaxKind::TableReference => "table_reference",
            SyntaxKind::SchemaReference => "table_reference",
            SyntaxKind::SingleIdentifierList => "identifier_list",
            SyntaxKind::GroupByClause => "groupby_clause",
            SyntaxKind::FrameClause => "frame_clause",
            SyntaxKind::WithCompoundStatement => "with_compound_statement",
            SyntaxKind::CommonTableExpression => "common_table_expression",
            SyntaxKind::CTEColumnList => "cte_column_list",
            SyntaxKind::SequenceReference => "column_reference",
            SyntaxKind::TriggerReference => "trigger_reference",
            SyntaxKind::TableConstraint => "table_constraint",
            SyntaxKind::JoinOnCondition => "join_on_condition",
            SyntaxKind::DatabaseReference => "database_reference",
            SyntaxKind::IndexReference => "database_reference",
            SyntaxKind::CollationReference => "collation_reference",
            SyntaxKind::OverClause => "over_clause",
            SyntaxKind::NamedWindow => "named_window",
            SyntaxKind::WindowSpecification => "window_specification",
            SyntaxKind::PartitionByClause => "partitionby_clause",
            SyntaxKind::JoinClause => "join_clause",
            SyntaxKind::DropTriggerStatement => "drop_trigger_statement",
            SyntaxKind::SamplingExpression => "sample_expression",
            SyntaxKind::TableExpression => "table_expression",
            SyntaxKind::CreateTriggerStatement => "create_trigger_statement",
            SyntaxKind::DropModelStatement => "drop_model_statement",
            SyntaxKind::DescribeStatement => "describe_statement",
            SyntaxKind::UseStatement => "use_statement",
            SyntaxKind::ExplainStatement => "explain_statement",
            SyntaxKind::CreateSequenceStatement => "create_sequence_statement",
            SyntaxKind::CreateSequenceOptions => "create_sequence_options_segment",
            SyntaxKind::AlterSequenceStatement => "alter_sequence_statement",
            SyntaxKind::DropSequenceStatement => "drop_sequence_statement",
            SyntaxKind::DropCastStatement => "drop_cast_statement",
            SyntaxKind::CreateFunctionStatement => "create_function_statement",
            SyntaxKind::DropFunctionStatement => "drop_function_statement",
            SyntaxKind::CreateModelStatement => "create_model_statement",
            SyntaxKind::CreateViewStatement => "create_view_statement",
            SyntaxKind::DeleteStatement => "delete_statement",
            SyntaxKind::UpdateStatement => "update_statement",
            SyntaxKind::CreateCastStatement => "create_cast_statement",
            SyntaxKind::CreateRoleStatement => "create_role_statement",
            SyntaxKind::DropRoleStatement => "drop_role_statement",
            SyntaxKind::AlterTableStatement => "alter_table_statement",
            SyntaxKind::CreateSchemaStatement => "create_schema_statement",
            SyntaxKind::SetSchemaStatement => "set_schema_statement",
            SyntaxKind::DropSchemaStatement => "drop_schema_statement",
            SyntaxKind::DropTypeStatement => "drop_type_statement",
            SyntaxKind::CreateDatabaseStatement => "create_database_statement",
            SyntaxKind::DropDatabaseStatement => "drop_database_statement",
            SyntaxKind::FunctionParameterList => "function_parameter_list",
            SyntaxKind::CreateIndexStatement => "create_index_statement",
            SyntaxKind::DropIndexStatement => "drop_index_statement",
            SyntaxKind::CreateTableStatement => "create_table_statement",
            SyntaxKind::AccessStatement => "access_statement",
            SyntaxKind::InsertStatement => "insert_statement",
            SyntaxKind::TransactionStatement => "transaction_statement",
            SyntaxKind::DropTableStatement => "drop_table_statement",
            SyntaxKind::DropViewStatement => "drop_view_statement",
            SyntaxKind::CreateUserStatement => "create_user_statement",
            SyntaxKind::DropUserStatement => "drop_user_statement",
            SyntaxKind::NotEqualTo => "comparison_operator",
            SyntaxKind::Concat => "binary_operator",
            SyntaxKind::ArrayExpression => "array_expression",
            SyntaxKind::LocalAlias => "local_alias",
            SyntaxKind::MergeStatement => "merge_statement",
            SyntaxKind::IndexColumnDefinition => "index_column_definition",
            SyntaxKind::BitwiseAnd => "comparison_operator",
            SyntaxKind::BitwiseOr => "comparison_operator",
            SyntaxKind::BitwiseLShift => "comparison_operator",
            SyntaxKind::BitwiseRShift => "comparison_operator",
            SyntaxKind::LessThan => "comparison_operator",
            SyntaxKind::GreaterThanOrEqualTo => "comparison_operator",
            SyntaxKind::LessThanOrEqualTo => "comparison_operator",
            SyntaxKind::Equals => "comparison_operator",
            SyntaxKind::GreaterThan => "comparison_operator",
            SyntaxKind::QualifiedNumericLiteral => "numeric_literal",
            SyntaxKind::AggregateOrderByClause => "aggregate_order_by_clause",
            SyntaxKind::FunctionName => "function_name",
            SyntaxKind::CaseExpression => "case_expression",
            SyntaxKind::WhenClause => "when_clause",
            SyntaxKind::ElseClause => "else_clause",
            SyntaxKind::WhereClause => "where_clause",
            SyntaxKind::SetOperator => "set_operator",
            SyntaxKind::ValuesClause => "values_clause",
            SyntaxKind::EmptyStructLiteral => "empty_struct_literal",
            SyntaxKind::ObjectLiteral => "object_literal",
            SyntaxKind::ObjectLiteralElement => "object_literal_element",
            SyntaxKind::TimeZone => "time_zone_grammar",
            SyntaxKind::BracketedArguments => "bracketed_arguments",
            SyntaxKind::DataType => "data_type",
            SyntaxKind::AliasExpression => "alias_expression",
            SyntaxKind::ShorthandCast => "cast_expression",
            SyntaxKind::ArrayAccessor => "array_accessor",
            SyntaxKind::ArrayLiteral => "array_literal",
            SyntaxKind::TypedArrayLiteral => "typed_array_literal",
            SyntaxKind::StructType => "struct_type",
            SyntaxKind::StructLiteral => "struct_literal",
            SyntaxKind::TypedStructLiteral => "typed_struct_literal",
            SyntaxKind::IntervalExpression => "interval_expression",
            SyntaxKind::ArrayType => "array_type",
            SyntaxKind::SizedArrayType => "sized_array_type",
            SyntaxKind::SelectStatement => "select_statement",
            SyntaxKind::OverlapsClause => "overlaps_clause",
            SyntaxKind::SelectClause => "select_clause",
            SyntaxKind::Statement => "statement",
            SyntaxKind::WithNoSchemaBindingClause => "with_no_schema_binding_clause",
            SyntaxKind::WithDataClause => "with_data_clause",
            SyntaxKind::SetExpression => "set_expression",
            SyntaxKind::FromClause => "from_clause",
            SyntaxKind::EmptyStructLiteralBrackets => "empty_struct_literal_brackets",
            SyntaxKind::WildcardExpression => "wildcard_expression",
            SyntaxKind::OrderByClause => "orderby_clause",
            SyntaxKind::TruncateStatement => "truncate_statement",
            SyntaxKind::FromExpression => "from_expression",
            SyntaxKind::FromExpressionElement => "from_expression_element",
            SyntaxKind::SelectClauseModifier => "select_clause_modifier",
            SyntaxKind::NamedWindowExpression => "named_window_expression",
            SyntaxKind::SelectClauseElement => "select_clause_element",
        }
    }
}
