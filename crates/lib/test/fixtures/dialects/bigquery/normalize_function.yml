file:
- statement:
  - select_statement:
    - select_clause:
      - keyword: SELECT
      - select_clause_element:
        - column_reference:
          - naked_identifier: col1
      - comma: ','
      - select_clause_element:
        - function:
          - function:
            - function_name_identifier: NORMALIZE
          - bracketed:
            - start_bracket: (
            - expression:
              - numeric_literal: '''\u00ea'''
            - comma: ','
            - keyword: NFD
            - end_bracket: )
        - alias_expression:
          - keyword: AS
          - naked_identifier: a
      - comma: ','
      - select_clause_element:
        - function:
          - function:
            - function_name_identifier: NORMALIZE
          - bracketed:
            - start_bracket: (
            - expression:
              - numeric_literal: '''\u0065\u0302'''
            - comma: ','
            - keyword: NFD
            - end_bracket: )
        - alias_expression:
          - keyword: AS
          - naked_identifier: b
      - comma: ','
      - select_clause_element:
        - function:
          - function:
            - function_name_identifier: NORMALIZE_AND_CASEFOLD
          - bracketed:
            - start_bracket: (
            - expression:
              - numeric_literal: '''\u00ea'''
            - comma: ','
            - keyword: NFD
            - end_bracket: )
        - alias_expression:
          - keyword: AS
          - naked_identifier: c
      - comma: ','
      - select_clause_element:
        - function:
          - function:
            - function_name_identifier: NORMALIZE_AND_CASEFOLD
          - bracketed:
            - start_bracket: (
            - expression:
              - numeric_literal: '''\u0065\u0302'''
            - comma: ','
            - keyword: NFD
            - end_bracket: )
        - alias_expression:
          - keyword: AS
          - naked_identifier: d
      - unparsable:
        - semicolon: ;
        - word: SELECT
        - word: a
        - comma: ','
        - word: b
        - comma: ','
        - word: a
        - equals: =
        - word: b
        - word: as
        - word: normalized
    - from_clause:
      - keyword: FROM
      - from_expression:
        - from_expression_element:
          - table_expression:
            - bracketed:
              - start_bracket: (
              - select_statement:
                - select_clause:
                  - keyword: SELECT
                  - select_clause_element:
                    - function:
                      - function:
                        - function_name_identifier: NORMALIZE
                      - bracketed:
                        - start_bracket: (
                        - expression:
                          - numeric_literal: '''\u00ea'''
                        - end_bracket: )
                    - alias_expression:
                      - keyword: as
                      - naked_identifier: a
                  - comma: ','
                  - select_clause_element:
                    - function:
                      - function:
                        - function_name_identifier: NORMALIZE
                      - bracketed:
                        - start_bracket: (
                        - expression:
                          - numeric_literal: '''\u0065\u0302'''
                        - end_bracket: )
                    - alias_expression:
                      - keyword: as
                      - naked_identifier: b
              - end_bracket: )
    - unparsable:
      - semicolon: ;
      - word: WITH
      - word: EquivalentNames
      - word: AS
      - start_bracket: (
      - word: SELECT
      - word: name
      - word: FROM
      - word: UNNEST
      - start_bracket: (
      - start_square_bracket: '['
      - single_quote: '''Jane\u2004Doe'''
      - comma: ','
      - single_quote: '''John\u2004Smith'''
      - comma: ','
      - single_quote: '''Jane\u2005Doe'''
      - comma: ','
      - single_quote: '''Jane\u2006Doe'''
      - comma: ','
      - single_quote: '''John Smith'''
      - end_square_bracket: ']'
      - end_bracket: )
      - word: AS
      - word: name
      - end_bracket: )
      - word: SELECT
      - word: NORMALIZE
      - start_bracket: (
      - word: name
      - comma: ','
      - word: NFKC
      - end_bracket: )
      - word: AS
      - word: normalized_name
      - comma: ','
      - word: COUNT
      - start_bracket: (
      - star: '*'
      - end_bracket: )
      - word: AS
      - word: name_count
      - word: FROM
      - word: EquivalentNames
      - word: GROUP
      - word: BY
      - numeric_literal: '1'
      - semicolon: ;
      - word: SELECT
      - word: a
      - comma: ','
      - word: b
      - comma: ','
      - word: NORMALIZE
      - start_bracket: (
      - word: a
      - end_bracket: )
      - equals: =
      - word: NORMALIZE
      - start_bracket: (
      - word: b
      - end_bracket: )
      - word: as
      - word: normalized
      - comma: ','
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: a
      - end_bracket: )
      - equals: =
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: b
      - end_bracket: )
      - word: as
      - word: normalized_with_case_folding
      - word: FROM
      - start_bracket: (
      - word: SELECT
      - single_quote: '''The red barn'''
      - word: AS
      - word: a
      - comma: ','
      - single_quote: '''The Red Barn'''
      - word: AS
      - word: b
      - end_bracket: )
      - semicolon: ;
      - word: SELECT
      - word: a
      - comma: ','
      - word: b
      - comma: ','
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: a
      - comma: ','
      - word: NFD
      - end_bracket: )
      - equals: =
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: b
      - comma: ','
      - word: NFD
      - end_bracket: )
      - word: AS
      - word: nfd
      - comma: ','
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: a
      - comma: ','
      - word: NFC
      - end_bracket: )
      - equals: =
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: b
      - comma: ','
      - word: NFC
      - end_bracket: )
      - word: AS
      - word: nfc
      - comma: ','
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: a
      - comma: ','
      - word: NFKD
      - end_bracket: )
      - equals: =
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: b
      - comma: ','
      - word: NFKD
      - end_bracket: )
      - word: AS
      - word: nkfd
      - comma: ','
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: a
      - comma: ','
      - word: NFKC
      - end_bracket: )
      - equals: =
      - word: NORMALIZE_AND_CASEFOLD
      - start_bracket: (
      - word: b
      - comma: ','
      - word: NFKC
      - end_bracket: )
      - word: AS
      - word: nkfc
